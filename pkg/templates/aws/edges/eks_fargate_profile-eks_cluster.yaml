source: aws:eks_fargate_profile
target: aws:eks_cluster
operational_rules:
  - if: | # check if there is an aws-observability namespace
      {{ $namespaces := allUpstream "kubernetes:namespace" .Target }}
      {{ range $index, $ns := $namespaces }}
        {{- if eq  (fieldValue "ObjectMeta.Name" $ns) "aws-observability" }}
          false
          {{break}}
        {{- end }}
      true
      {{ end }}
    steps:
      - resource: '{{ .Source }}'
        direction: downstream
        resources:
          - kubernetes:namespace:aws-observability
    configuration_rules:
      - resource: kubernetes:namespace:aws-observability
        configuration:
          field: Cluster
          value: '{{ .Target }}'
      - resource: kubernetes:namespace:aws-observability
        configuration:
          field: Object
          value:
            apiVersion: v1
            kind: Namespace
            metadata:
              name: aws-observability
              labels:
                name: aws-observability
                aws-observability: enabled

  - if: | # check if the config map is in place
      {{ $configMaps := allUpstream "kubernetes:config_map" .Target }}
      {{ range $index, $cm := $configMaps }}
        {{- if eq  (fieldValue "Object.metadata.name" $cm) "aws-logging" }}
          false
          {{break}}
        {{- end }}
      true
      {{ end }}
    steps:
      - resource: '{{ .Source }}'
        direction: downstream
        resources:
          - kubernetes:config_map:aws-logging
      - resource: kubernetes:config_map:aws-logging
        direction: downstream
        resources:
          - selector: kubernetes:namespace
            properties:
              Object:
                metadata:
                  name: aws-observability
    configuration_rules:
      - resource: kubernetes:config_map:aws-logging
        configuration:
          field: Cluster
          value: '{{ .Target }}'
      - resource: kubernetes:config_map:aws-logging
        configuration:
          field: Object
          value:
            kind: ConfigMap
            apiVersion: v1
            metadata:
              name: aws-logging
              namespace: aws-observability
            data:
              flb_log_cw: 'false' # Set to true to ship Fluent Bit process logs to CloudWatch.
              filters.conf: |
                [FILTER]
                    Name parser
                    Match *
                    Key_name log
                    Parser crio
                [FILTER]
                    Name kubernetes
                    Match kube.*
                    Merge_Log On
                    Keep_Log Off
                    Buffer_Size 0
                    Kube_Meta_Cache_TTL 300s
              output.conf: '{{ .Target }}#AwsObesrvabilityConfigMapOutputConf'
              parsers.conf: |
                [PARSER]
                    Name crio
                    Format Regex
                    Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>P|F) (?<log>.*)$
                    Time_Key    time
                    Time_Format %Y-%m-%dT%H:%M:%S.%L%z
