source: aws:eks_node_group
target: aws:eks_cluster

operational_rules:
  - if: | # check if metrics server is already installed on the cluster
      {{ $needsCreation := true}}
      {{ $charts := allUpstream "kubernetes:helm_chart" .Target }}
      {{ range $index, $chart := $charts }}
        {{- if eq (fieldValue "Repo" $chart) "https://kubernetes-sigs.github.io/metrics-server/" }}
          {{ $needsCreation = false }}
          {{break}}
        {{- end }}
      {{ end }}
      {{ $needsCreation }}
    steps:
      - resource: '{{ .Source }}'
        direction: upstream
        resources:
          - selector: kubernetes:helm_chart:metrics_server
            properties:
              Cluster: '{{ .Target }}'
              Repo: https://kubernetes-sigs.github.io/metrics-server/
              Chart: metrics-server
              Internal: true

  - if: | # check if there is an eks add on for cloudwatch so we can install observability
      {{ $needsCreation := true}}
      {{ $addOns := allUpstream "aws:eks_add_on" .Target }}
      {{ range $index, $addOn := $addOns }}
        {{- if eq (fieldValue "AddOnName" $addOn) "amazon-cloudwatch-observability" }}
          {{ $needsCreation = false}}
          {{break}}
        {{- end }}
      {{ end }}
      {{ $needsCreation }}
    steps:             
      - resource: '{{ .Target }}'
        direction: upstream
        resources:
          - selector: aws:eks_add_on:amazon-cloudwatch-observability
            properties:
              AddOnName: amazon-cloudwatch-observability
              Cluster: '{{ .Target }}'

      - resource: |
          {{ $addOns := allUpstream "aws:eks_add_on" .Target }}
          {{ range $index, $addOn := $addOns }}
            {{- if eq (fieldValue "AddOnName" $addOn) "amazon-cloudwatch-observability" }}
              {{ $addOn }}
              {{break}}
            {{- end }}
          {{ end }}
        direction: downstream
        resources:
          - selector: aws:iam_role
            properties:
              ManagedPolicies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
                - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        unique: true    
          

  - if: | #Check if the ami type is gpu and if so install nvidia plugin
      {{ $needsCreation := true}}
      {{- if not (hasSuffix (toLower (fieldValue "AmiType" .Source)) "_gpu") }}
        {{ $needsCreation = false }}
      {{- else}}
        {{ $manifests := allUpstream "kubernetes:manifest" .Target }}
        {{ range $index, $manifest := $manifests }}
          {{- if eq (fieldValue "FilePath" $manifest) "https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v1.10/nvidia-device-plugin.yml" }}
            {{ $needsCreation = false }}
            {{break}}
          {{- end }}
        {{ end }}
      {{- end}}
      {{ $needsCreation }}
    steps:
      - resource: '{{ .Source }}'
        direction: upstream
        resources:
          - selector: kubernetes:manifest:nvidia-device-plugin
            properties:
              Cluster: '{{.Target}}'
              FilePath: https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v1.10/nvidia-device-plugin.yml
