qualified_type_name: aws:lambda_function
display_name: Lambda Function

properties:
  ExecutionRole:
    type: resource
    operational_rule:
      steps:
        - direction: downstream
          resources:
            - aws:iam_role:{{ .Self.Name }}-ExecutionRole
          unique: true
  Image:
    type: resource
    operational_rule:
      steps:
        - direction: downstream
          resources:
            - aws:ecr_image:{{ .Self.Name }}-image
          unique: true
  EnvironmentVariables:
    type: map(string,string)
#  SecurityGroups:
#    type: list(resource)
#    operational_rule:
#      if: |
#        {{ hasDownstream "aws:vpc" .Self }}
#      steps:
#        - direction: downstream
#          resources:
#            - aws:security_group
  Subnets:
    type: list(resource)
    operational_rule:
      if: |
        {{ hasDownstream "aws:vpc" .Self }}
      steps:
        - direction: downstream
          num_needed: 2
          resources:
            - selector: aws:subnet
              properties:
                Type: private
            - aws:subnet
  Timeout:
    type: int
    default_value: 180
  MemorySize:
    type: int
    default_value: 512
  EfsAccessPoint:
    type: resource
  LogGroup:
    type: resource
    operational_rule:
      steps:
        - direction: downstream
          resources:
            - aws:log_group:{{ .Self.Name }}-log-group
          unique: true
      configuration_rules:
        - resource: aws:log_group:{{ .Self.Name }}-log-group
          configuration:
            field: LogGroupName
            value: /aws/lambda/{{ .Self.Name }}
  LambdaIntegrationUri:
    type: string
    configuration_disabled: true
    deploy_time: true
  Arn:
    type: string
    configuration_disabled: true
    deploy_time: true

classification:
  is:
    - serverless
    - compute

delete_context:
  requires_no_upstream: true
  requires_no_downstream: true

views:
  dataflow: big
