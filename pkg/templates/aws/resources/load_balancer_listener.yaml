qualified_type_name: aws:load_balancer_listener
display_name: Load Balancer Listener

properties:
  Certificate:
    type: resource(aws:acm_certificate)
    operational_rule:
      if: '{{ eq (fieldValue "Protocol" .Self) "HTTPS" }}'
      step:
        direction: downstream
        resources:
          - aws:acm_certificate
  Port:
    type: int
    default_value: 80
    min_value: 1
    max_value: 65535
    required: true
  Protocol:
    type: string
    allowed_values:
        - GENEVE
        - HTTP
        - HTTPS
        - TCP
        - TCP_UDP
        - TLS
        - UDP
    required: true
  LoadBalancer:
    type: resource(aws:load_balancer)
    namespace: true
    operational_rule:
      step:
        direction: upstream
        resources:
          - aws:load_balancer
  DefaultActions:
    type: list(model(aws:load_balancer_listener:action))
  aws:tags:
    type: model
    
delete_context:
  requires_no_upstream: true
views:
  dataflow: small

deployment_permissions:
  deploy: ["elbv2:CreateListener"]
  tear_down: ["elbv2:DeleteListener"]
  update: ["elbv2:ModifyListener"]