qualified_type_name: aws:load_balancer
display_name: Load Balancer
sanitize_name:
  # https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateLoadBalancer.html
  # This name must be unique per region per account,
  # can have a maximum of 32 characters (24 since we reserve 8 for an IaC-appended suffix),
  # must contain only alphanumeric characters or hyphens,
  # must not begin or end with a hyphen,
  # and must not begin with "internal-".
  |
  {{ . 
    | replace `^internal-` ""
    | replace `(^-)|(-$)` ""
    | replace `[^[:alnum:]-]+` "-"
    | length 1 24
  }}

properties:
  IpAddressType:
    type: string
    description: Specifies the type of IP addresses used by the load balancer's subnets
    allowed_values:
      - ipv4
      - dualstack
  LoadBalancerAttributes:
    type: map(string,string)
    description: A map of key-value pairs defining attributes of the load balancer
  Scheme:
    type: string
    default_value: internal
    description: Indicates whether the load balancer is internet-facing or internal
    important: true
    allowed_values:
      - internet-facing
      - internal
  SecurityGroups:
    # We should require an upstream security group if the LB is in a VPC
    # once we have the ability to disable inbound rule processing for PrivateLink traffic,
    # which is required for secure connectivity from an API Gateway VPC Link.
    # See: https://github.com/hashicorp/terraform-provider-aws/pull/33767
    type: list(resource(aws:security_group))
    operational_rule:
      if: '{{ fieldValue "Scheme" .Self | eq "internet-facing" }}'
      step:
        direction: upstream
        resources:
          - aws:security_group
        unique: true
    description: A list of security groups for the load balancer when the scheme is
      internet-facing
  Subnets:
    type: list(resource(aws:subnet))
    operational_rule:
      step:
        direction: downstream
        resources:
          - selector: aws:subnet
            properties:
              Type: |
                {{- if eq (fieldValue "Scheme" .Self) "internet-facing"}}
                  public
                {{- else}}
                  private
                {{- end}}
        num_needed: 2
    description: A list of subnets for the load balancer, with at least two required
  Tags:
    type: map(string,string)
    description: A map of key-value pairs to associate with the load balancer for
      organization and filtering resources
  Type:
    type: string
    default_value: network
    allowed_values:
      - network
      - application
    description: "The type of load balancer: either 'network' or 'application'"
    required: true
    important: true
  aws:tags:
    type: model
  NlbUri:
    type: string
    configuration_disabled: true
    deploy_time: true
    description: A unique identifier for the load balancer, available after deployment
  DnsName:
    type: string
    configuration_disabled: true
    deploy_time: true
    description: The DNS name for the load balancer, available after deployment

path_satisfaction:
  # See comment above for why we are not solving the network path
  as_target:
    - network
  as_source:
    - network#Subnets
    - target_group

classification:
  is:
    - load_balancer
    - scalable
    - reliable

delete_context:
  requires_no_downstream: true
views:
  dataflow: parent


deployment_permissions:
  deploy: ["elbv2:CreateLoadBalancer"]
  tear_down: ["elbv2:DeleteLoadBalancer"]
  update: ["elbv2:ModifyLoadBalancerAttributes"]