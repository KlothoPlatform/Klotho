qualified_type_name: aws:api_integration
display_name: API Integration

deletion_dependent: true # Because both integration and method depend on resource we need to not use these edges to reflect deletion

properties:
  RestApi:
    type: resource(aws:rest_api)
    namespace: true
    operational_rule:
      step:
        direction: upstream
        resources:
          - aws:rest_api
    description: The identifier of an AWS REST API resource associated with the integration
  Resource:
    type: resource(aws:api_resource)
    operational_rule:
      if: |
        {{ ne (fieldValue "Route" .Self) "/" }}
      step:
        direction: upstream
        resources:
          - selector: 'aws:api_resource'
            properties:
              FullPath: '{{ fieldValue "Route" .Self }}'
              RestApi: '{{ fieldValue "RestApi" .Self }}'
    description: The identifier of an API resource. This is usually set when the integration
      needs to reference a specific resource within an API
  Method:
    type: resource(aws:api_method)
    operational_rule:
      step:
        direction: upstream
        resources:
          - selector: aws:api_method
            properties:
              RestApi: '{{ fieldValue "RestApi" .Self }}'
        unique: true # Each Integration must have its own method
    description: The HTTP method (GET, POST, PUT, DELETE, PATCH, OPTIONS, ANY) used
      in the integration request, associated with the resource and REST API
  RequestParameters:
    type: map(string,string)
    operational_rule:
      value: |
        {{ $params := split (fieldValue "Route" .Self) "/" | filterMatch "^{\\w+\\+?}$" }}
        {{ zipToMap
            ($params | mapString "{([^+}]*)\\+?}" "integration.request.path.$1")
            ($params | mapString "{([^+}]*)\\+?}" "method.request.path.$1")
          | toJson
        }}
    description: A map of request parameters that can be passed to the backend integration.
      The map's keys correspond to the request parameter names, and the values specify
      where to get the values
  IntegrationHttpMethod:
    type: string
    default_value: ANY
    description: The HTTP method for the integration. When the integration type is
      HTTP or AWS, this field is required
  Type:
    type: string
    description: The type of integration used, such as AWS, HTTP, MOCK, HTTP_PROXY,
      or AWS_PROXY
  ConnectionType:
    type: string
    description: The integration connection type, which can be INTERNET or VPC_LINK,
      indicating how API Gateway should connect to the back end
  VpcLink:
    type: resource(aws:vpc_link)
    description: The ID of the VpcLink used for the integration when connection type
      is VPC_LINK
  Uri:
    type: string
    configuration_disabled: true
    description: The Uniform Resource Identifier (URI) for the integration. When the
      integration type is HTTP or AWS, this field is required
  Route:
    type: string
    default_value: /{proxy+}
    description: A route for requests sent to this API. Defines the path that is matched
      against the incoming request URI to identify the appropriate integration and
      method
  Target:
    type: resource
    description: A reference to an AWS resource, defining the backend target that
      API Gateway will invoke when this route is called
  LbUri:
    type: string
    configuration_disabled: true
    deploy_time: true

    description: The Load Balancer URI. Use when the integration endpoint is a Network
      Load Balancer
path_satisfaction:
  as_target:
    - api_route
  as_source:
    - api_route

classification:
  is:
    - api_route
    - api_integration

delete_context:
  requires_no_upstream: true

views:
  dataflow: big

deployment_permissions:
  deploy: ["apigateway:PutIntegration"]
  tear_down: ["apigateway:DeleteIntegration"]
  update: ["apigateway:UpdateIntegration"]