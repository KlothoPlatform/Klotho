qualified_type_name: aws:api_integration
display_name: API Integration

deletion_dependent: true # Because both integration and method depend on resource we need to not use these edges to reflect deletion

properties:
  RestApi:
    type: resource(aws:rest_api)
    namespace: true
    operational_rule:
      step:
        direction: upstream
        resources:
          - aws:rest_api
  Resource:
    type: resource(aws:api_resource)
    operational_rule:
      if: |
        {{ ne (fieldValue "Route" .Self) "/" }}
      step:
        direction: upstream
        resources:
          - selector: 'aws:api_resource'
            properties:
              FullPath: '{{ fieldValue "Route" .Self }}'
              RestApi: '{{ fieldValue "RestApi" .Self }}'
  Method:
    type: resource(aws:api_method)
    operational_rule:
      step:
        direction: upstream
        resources:
          - selector: aws:api_method
            properties: 
              RestApi: '{{ fieldValue "RestApi" .Self }}'
        unique: true # Each Integration must have its own method
  RequestParameters:
    type: map(string,string)
    operational_rule:
      value: |
        {{ $params := split (fieldValue "Route" .Self) "/" | filterMatch "^{\\w+\\+?}$" }}
        {{ zipToMap
            ($params | mapString "{([^+}]*)\\+?}" "integration.request.path.$1")
            ($params | mapString "{([^+}]*)\\+?}" "method.request.path.$1")
          | toJson
        }}
  IntegrationHttpMethod:
    type: string
    default_value: ANY
  Type:
    type: string
  ConnectionType:
    type: string
  VpcLink:
    type: resource(aws:vpc_link)
  Uri:
    type: string
    configuration_disabled: true
  Route:
    type: string
    default_value: /{proxy+}
  Target:
    type: resource
  LbUri:
    type: string
    configuration_disabled: true
    deploy_time: true

path_satisfaction:
  as_target:
    - api_route
  as_source:
    - api_route

classification:
  is:
    - api_route
    - api_integration

delete_context:
  requires_no_upstream_or_downstream: true

views:
  dataflow: big
