constraints:
- node: aws:lambda_function:lambda_function_0
  operator: replace
  replacement_node: aws:lambda_function:new_lambda_name
  scope: application
resources:
    aws:lambda_function:lambda_function_0:
        EnvironmentVariables:
            DYNAMODB_TABLE_1_TABLE_NAME: aws:dynamodb_table:dynamodb_table_1#Name
        ExecutionRole: aws:iam_role:lambda_function_0-ExecutionRole
        Image: aws:ecr_image:lambda_function_0-image
        LogGroup: aws:log_group:lambda_function_0-log-group
        MemorySize: 512
        Timeout: 180
    aws:SERVICE_API:lambda_function_0-lambda_function_0-log-group:
    aws:ecr_image:lambda_function_0-image:
        Context: .
        Dockerfile: lambda_function_0-image.Dockerfile
        Repo: aws:ecr_repo:ecr_repo-0
    aws:iam_role:lambda_function_0-ExecutionRole:
        AssumeRolePolicyDoc:
            Statement:
                - Action:
                    - sts:AssumeRole
                  Effect: Allow
                  Principal:
                    Service:
                        - lambda.amazonaws.com
            Version: "2012-10-17"
        InlinePolicies:
            - Name: dynamodb_table_1-policy
              Policy:
                Statement:
                    - Action:
                        - dynamodb:*
                      Effect: Allow
                      Resource:
                        - aws:dynamodb_table:dynamodb_table_1#Arn
                        - aws:dynamodb_table:dynamodb_table_1#DynamoTableStreamArn
                        - aws:dynamodb_table:dynamodb_table_1#DynamoTableBackupArn
                        - aws:dynamodb_table:dynamodb_table_1#DynamoTableExportArn
                        - aws:dynamodb_table:dynamodb_table_1#DynamoTableIndexArn
                Version: "2012-10-17"
        ManagedPolicies:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    aws:ecr_repo:ecr_repo-0:
        ForceDelete: true
    aws:dynamodb_table:dynamodb_table_1:
        Attributes:
            - Name: id
              Type: S
        BillingMode: PAY_PER_REQUEST
        HashKey: id
    aws:log_group:lambda_function_0-log-group:
        LogGroupName: /aws/lambda/lambda_function_0
        RetentionInDays: 5
edges:
    aws:lambda_function:lambda_function_0 -> aws:SERVICE_API:lambda_function_0-lambda_function_0-log-group:
    aws:lambda_function:lambda_function_0 -> aws:ecr_image:lambda_function_0-image:
    aws:lambda_function:lambda_function_0 -> aws:iam_role:lambda_function_0-ExecutionRole:
    aws:SERVICE_API:lambda_function_0-lambda_function_0-log-group -> aws:dynamodb_table:dynamodb_table_1:
    aws:SERVICE_API:lambda_function_0-lambda_function_0-log-group -> aws:log_group:lambda_function_0-log-group:
    aws:ecr_image:lambda_function_0-image -> aws:ecr_repo:ecr_repo-0:
    aws:iam_role:lambda_function_0-ExecutionRole -> aws:dynamodb_table:dynamodb_table_1:
    aws:iam_role:lambda_function_0-ExecutionRole -> aws:log_group:lambda_function_0-log-group:
