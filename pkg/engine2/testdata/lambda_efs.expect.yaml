resources:
    aws:security_group:vpc-0:lambda_test_app-security_group:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
        Vpc: aws:vpc:vpc-0
    aws:lambda_function:lambda_test_app:
        EfsAccessPoint: aws:efs_access_point:test-efs-fs:lambda_test_app-test-efs-fs
        ExecutionRole: aws:iam_role:lambda_test_app-ExecutionRole
        Image: aws:ecr_image:lambda_test_app-image
        LogGroup: aws:log_group:lambda_test_app-log-group
        MemorySize: 512
        SecurityGroups:
            - aws:security_group:vpc-0:lambda_test_app-security_group
        Subnets:
            - aws:subnet:vpc-0:lambda_test_app-test-efs-fs
            - aws:subnet:vpc-0:subnet-1
        Timeout: 180
    aws:ecr_image:lambda_test_app-image:
        Context: .
        Dockerfile: lambda_test_app-image.Dockerfile
        Repo: aws:ecr_repo:ecr_repo-0
    aws:efs_access_point:test-efs-fs:lambda_test_app-test-efs-fs:
        FileSystem: aws:efs_file_system:test-efs-fs
        PosixUser:
            Gid: 1000
            Uid: 1000
        RootDirectory:
            CreationInfo:
                OwnerGid: 1000
                OwnerUid: 1000
                Permissions: "777"
            Path: /mnt/efs
    aws:iam_role:lambda_test_app-ExecutionRole:
        AssumeRolePolicyDoc:
            Statement:
                - Action:
                    - sts:AssumeRole
                  Effect: Allow
                  Principal:
                    Service:
                        - lambda.amazonaws.com
            Version: "2012-10-17"
        InlinePolicies:
            - Name: test-efs-fs-policy
              Policy:
                Statement:
                    - Action:
                        - efs:Client*
                      Effect: Allow
                      Resource:
                        - aws:efs_file_system:test-efs-fs#Arn
                Version: "2012-10-17"
        ManagedPolicies:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
            - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    aws:ecr_repo:ecr_repo-0:
        ForceDelete: true
    aws:efs_mount_target:test-efs-fs:lambda_test_app-test-efs-fs:
        FileSystem: aws:efs_file_system:test-efs-fs
        SecurityGroups:
            - aws:security_group:vpc-0:lambda_test_app-test-efs-fs
        Subnet: aws:subnet:vpc-0:lambda_test_app-test-efs-fs
    aws:subnet:vpc-0:lambda_test_app-test-efs-fs:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.192.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:lambda_test_app-test-efs-fs-lambda_test_app-test-efs-fs-route_table:
        RouteTable: aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table
        Subnet: aws:subnet:vpc-0:lambda_test_app-test-efs-fs
    aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-2:lambda_test_app-test-efs-fs-route_table-nat_gateway
        Vpc: aws:vpc:vpc-0
    aws:nat_gateway:subnet-2:lambda_test_app-test-efs-fs-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:lambda_test_app-test-efs-fs-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:elastic_ip:lambda_test_app-test-efs-fs-route_table-nat_gateway-elastic_ip:
    aws:subnet:vpc-0:subnet-2:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.0.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-2-subnet-2-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-2-route_table
        Subnet: aws:subnet:vpc-0:subnet-2
    aws:route_table:vpc-0:subnet-2-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Vpc: aws:vpc:vpc-0
    aws:SERVICE_API:lambda_test_app-lambda_test_app-log-group:
    aws:log_group:lambda_test_app-log-group:
        LogGroupName: /aws/lambda/lambda_test_app
        RetentionInDays: 5
    aws:availability_zone:region-0:availability_zone-1:
        Index: 1
        Region: aws:region:region-0
    aws:efs_file_system:test-efs-fs:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        Encrypted: true
        PerformanceMode: generalPurpose
        ThroughputMode: bursting
    aws:availability_zone:region-0:availability_zone-0:
        Index: 0
        Region: aws:region:region-0
    aws:region:region-0:
    aws:efs_mount_target:test-efs-fs:subnet-1-test-efs-fs:
        FileSystem: aws:efs_file_system:test-efs-fs
        SecurityGroups:
            - aws:security_group:vpc-0:subnet-1-test-efs-fs
        Subnet: aws:subnet:vpc-0:subnet-1
    aws:subnet:vpc-0:subnet-1:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-0
        CidrBlock: 10.0.128.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Type: private
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-1-subnet-1-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-1-route_table
        Subnet: aws:subnet:vpc-0:subnet-1
    aws:security_group:vpc-0:lambda_test_app-test-efs-fs:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - CidrBlocks:
                - 10.0.192.0/18
              Description: Allow ingress traffic from ip addresses within the subnet lambda_test_app-test-efs-fs
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
            - CidrBlocks:
                - 10.0.128.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-1
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        Vpc: aws:vpc:vpc-0
    aws:security_group:vpc-0:subnet-1-test-efs-fs:
        EgressRules:
            - CidrBlocks:
                - 0.0.0.0/0
              Description: Allows all outbound IPv4 traffic
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        IngressRules:
            - Description: Allow ingress traffic from within the same security group
              FromPort: 0
              Protocol: "-1"
              Self: true
              ToPort: 0
            - CidrBlocks:
                - 10.0.128.0/18
              Description: Allow ingress traffic from ip addresses within the subnet subnet-1
              FromPort: 0
              Protocol: "-1"
              ToPort: 0
        Vpc: aws:vpc:vpc-0
    aws:route_table:vpc-0:subnet-1-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              NatGateway: aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway
        Vpc: aws:vpc:vpc-0
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
        ElasticIp: aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
    aws:subnet:vpc-0:subnet-3:
        AvailabilityZone: aws:availability_zone:region-0:availability_zone-1
        CidrBlock: 10.0.64.0/18
        MapPublicIpOnLaunch: false
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Type: public
        Vpc: aws:vpc:vpc-0
    aws:route_table_association:subnet-3-subnet-3-route_table:
        RouteTable: aws:route_table:vpc-0:subnet-3-route_table
        Subnet: aws:subnet:vpc-0:subnet-3
    aws:route_table:vpc-0:subnet-3-route_table:
        Routes:
            - CidrBlock: 0.0.0.0/0
              Gateway: aws:internet_gateway:vpc-0:internet_gateway-0
        Vpc: aws:vpc:vpc-0
    aws:internet_gateway:vpc-0:internet_gateway-0:
        Vpc: aws:vpc:vpc-0
    aws:vpc:vpc-0:
        CidrBlock: 10.0.0.0/16
        EnableDnsHostnames: true
        EnableDnsSupport: true
edges:
    aws:security_group:vpc-0:lambda_test_app-security_group -> aws:lambda_function:lambda_test_app:
    aws:security_group:vpc-0:lambda_test_app-security_group -> aws:vpc:vpc-0:
    aws:lambda_function:lambda_test_app -> aws:SERVICE_API:lambda_test_app-lambda_test_app-log-group:
    aws:lambda_function:lambda_test_app -> aws:ecr_image:lambda_test_app-image:
    aws:lambda_function:lambda_test_app -> aws:efs_access_point:test-efs-fs:lambda_test_app-test-efs-fs:
    aws:lambda_function:lambda_test_app -> aws:iam_role:lambda_test_app-ExecutionRole:
    aws:lambda_function:lambda_test_app -> aws:subnet:vpc-0:lambda_test_app-test-efs-fs:
    aws:lambda_function:lambda_test_app -> aws:subnet:vpc-0:subnet-1:
    aws:ecr_image:lambda_test_app-image -> aws:ecr_repo:ecr_repo-0:
    aws:efs_access_point:test-efs-fs:lambda_test_app-test-efs-fs -> aws:efs_file_system:test-efs-fs:
    aws:iam_role:lambda_test_app-ExecutionRole -> aws:efs_file_system:test-efs-fs:
    aws:iam_role:lambda_test_app-ExecutionRole -> aws:log_group:lambda_test_app-log-group:
    aws:efs_mount_target:test-efs-fs:lambda_test_app-test-efs-fs -> aws:efs_file_system:test-efs-fs:
    aws:efs_mount_target:test-efs-fs:lambda_test_app-test-efs-fs -> aws:subnet:vpc-0:lambda_test_app-test-efs-fs:
    aws:subnet:vpc-0:lambda_test_app-test-efs-fs -> aws:SERVICE_API:lambda_test_app-lambda_test_app-log-group:
    aws:subnet:vpc-0:lambda_test_app-test-efs-fs -> aws:availability_zone:region-0:availability_zone-1:
    ? aws:subnet:vpc-0:lambda_test_app-test-efs-fs -> aws:route_table_association:lambda_test_app-test-efs-fs-lambda_test_app-test-efs-fs-route_table
    :
    aws:subnet:vpc-0:lambda_test_app-test-efs-fs -> aws:security_group:vpc-0:lambda_test_app-test-efs-fs:
    aws:subnet:vpc-0:lambda_test_app-test-efs-fs -> aws:vpc:vpc-0:
    ? aws:route_table_association:lambda_test_app-test-efs-fs-lambda_test_app-test-efs-fs-route_table -> aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table
    :
    ? aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table -> aws:nat_gateway:subnet-2:lambda_test_app-test-efs-fs-route_table-nat_gateway
    :
    aws:route_table:vpc-0:lambda_test_app-test-efs-fs-route_table -> aws:vpc:vpc-0:
    ? aws:nat_gateway:subnet-2:lambda_test_app-test-efs-fs-route_table-nat_gateway -> aws:elastic_ip:lambda_test_app-test-efs-fs-route_table-nat_gateway-elastic_ip
    :
    aws:nat_gateway:subnet-2:lambda_test_app-test-efs-fs-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-2:
    aws:subnet:vpc-0:subnet-2 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-2 -> aws:route_table_association:subnet-2-subnet-2-route_table:
    aws:subnet:vpc-0:subnet-2 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-2-subnet-2-route_table -> aws:route_table:vpc-0:subnet-2-route_table:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-2-route_table -> aws:vpc:vpc-0:
    aws:SERVICE_API:lambda_test_app-lambda_test_app-log-group -> aws:log_group:lambda_test_app-log-group:
    aws:availability_zone:region-0:availability_zone-1 -> aws:region:region-0:
    aws:efs_file_system:test-efs-fs -> aws:availability_zone:region-0:availability_zone-0:
    aws:availability_zone:region-0:availability_zone-0 -> aws:region:region-0:
    aws:efs_mount_target:test-efs-fs:subnet-1-test-efs-fs -> aws:efs_file_system:test-efs-fs:
    aws:efs_mount_target:test-efs-fs:subnet-1-test-efs-fs -> aws:subnet:vpc-0:subnet-1:
    aws:subnet:vpc-0:subnet-1 -> aws:SERVICE_API:lambda_test_app-lambda_test_app-log-group:
    aws:subnet:vpc-0:subnet-1 -> aws:availability_zone:region-0:availability_zone-0:
    aws:subnet:vpc-0:subnet-1 -> aws:route_table_association:subnet-1-subnet-1-route_table:
    aws:subnet:vpc-0:subnet-1 -> aws:security_group:vpc-0:lambda_test_app-test-efs-fs:
    aws:subnet:vpc-0:subnet-1 -> aws:security_group:vpc-0:subnet-1-test-efs-fs:
    aws:subnet:vpc-0:subnet-1 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-1-subnet-1-route_table -> aws:route_table:vpc-0:subnet-1-route_table:
    aws:security_group:vpc-0:lambda_test_app-test-efs-fs -> aws:efs_mount_target:test-efs-fs:lambda_test_app-test-efs-fs:
    aws:security_group:vpc-0:lambda_test_app-test-efs-fs -> aws:vpc:vpc-0:
    aws:security_group:vpc-0:subnet-1-test-efs-fs -> aws:efs_mount_target:test-efs-fs:subnet-1-test-efs-fs:
    aws:security_group:vpc-0:subnet-1-test-efs-fs -> aws:vpc:vpc-0:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway:
    aws:route_table:vpc-0:subnet-1-route_table -> aws:vpc:vpc-0:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:elastic_ip:subnet-1-route_table-nat_gateway-elastic_ip:
    aws:nat_gateway:subnet-3:subnet-1-route_table-nat_gateway -> aws:subnet:vpc-0:subnet-3:
    aws:subnet:vpc-0:subnet-3 -> aws:availability_zone:region-0:availability_zone-1:
    aws:subnet:vpc-0:subnet-3 -> aws:route_table_association:subnet-3-subnet-3-route_table:
    aws:subnet:vpc-0:subnet-3 -> aws:vpc:vpc-0:
    aws:route_table_association:subnet-3-subnet-3-route_table -> aws:route_table:vpc-0:subnet-3-route_table:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:internet_gateway:vpc-0:internet_gateway-0:
    aws:route_table:vpc-0:subnet-3-route_table -> aws:vpc:vpc-0:
    aws:internet_gateway:vpc-0:internet_gateway-0 -> aws:vpc:vpc-0:
