provider: aws
type: lambda_function
rules:
  - enforcement: exactly_one
    direction: downstream
    resource_types:
      - iam_role
    set_field: Role
    unsatisfied_action:
      operation: create
      unique: true
  - enforcement: exactly_one
    direction: downstream
    resource_types:
      - ecr_image
    set_field: Image
    unsatisfied_action:
      operation: create
      unique: true
  - enforcement: exactly_one
    direction: downstream
    resource_types:
      - log_group
    unsatisfied_action:
      operation: create
      unique: true
  - enforcement: conditional
    direction: downstream
    resource_types:
      - vpc
    remove_direct_dependency: true
    rules:
      - enforcement: any_available
        direction: downstream
        resource_types:
          - subnet_private
          - subnet_public
        set_field: Subnets
        num_needed: 2
        unsatisfied_action:
          operation: create
          default_type: subnet_private
      - enforcement: any_available
        direction: downstream
        resource_types:
          - security_group
        set_field: SecurityGroups
        num_needed: 1
        unsatisfied_action:
          operation: create
configuration:
  - field: Timeout
    value: 180
    zero_value_allowed: false
  - field: MemorySize
    value: 512
views:
  dataflow: big

Properties:
  Name: 
    Type: string
    MutableTag: Mutable
    validation: ....
    sanatization: ... 
  Role: 
    Type: resource
    MutableTag: Immutable
    validation: {{ starts_with aws:iam_role }}
  EnvironmentVariables:
      Type: map
      MutableTag: Mutable
      validation: ...
      sanatization: ...
      Properties:
        Key:
          Type: string
          MutableTag: Immutable
          validation: ...
          sanatization: ...
        Value:
          Type: IaCValue
          MutableTag: Immutable
          validation: ...
          sanatization: ...
  SecurityGroups:
    Type: list
    MutableTag: Immutable
    validation: ...
    sanatization: ...
    Properties:
      Item:
        Type: resource
        MutableTag: Immutable
        validation: {{ starts_with aws:security_group }}
  Timeout:
    Type: int
    MutableTag: Mutable
    validation: ...
    sanatization: ...

  LambdaFunction struct {
		Name                 string
		ConstructRefs        construct.BaseConstructSet `yaml:"-"`
		Role                 *IamRole
		Image                *EcrImage
		EnvironmentVariables map[string]construct.IaCValue `yaml:"-"`
		SecurityGroups       []*SecurityGroup
		Subnets              []*Subnet
		Timeout              int
		MemorySize           int
		EfsAccessPoint       *EfsAccessPoint
	}