provider: aws
type: api_resource
rules:
  - enforcement: exactly_one
    direction: upstream
    resources:
      - '{{ upstream "aws:rest_api" (downstream "aws:api_integration" .Self) }}'
    set_field: RestApi
    unsatisfied_action:
      operation: create
  - enforcement: exactly_one
    direction: upstream
    if: | # Only need a parent resource if this one isn't the root
      {{ $integration := downstream "aws:api_integration" .Self }}
      {{ $parts := slice (split (fieldValue "Route" $integration) "/") 1 }}
      {{ $paths := shortestPath .Self $integration | filterIds "aws:api_resource" }}
      {{ lt (len $paths) (len $parts) }}
    resources:
      - |
        {{ $integration := downstream "aws:api_integration" .Self }}
        {{ $parts := slice (split (fieldValue "Route" $integration) "/") 1 }}
        {{ $paths := shortestPath .Self $integration | filterIds "aws:api_resource" }}
        {{ $parents := slice $parts 0 (sub (len $parts) (len $paths)) }}
        {{ $name := join $parents "-" | replace "\\{([^}+]+)\\+?\\}" "$1" | replace "^/" "" | replace "/" "-" }}
        aws:api_resource:{{ $name }}
    set_field: ParentResource
    unsatisfied_action:
      operation: create
configuration:
  - field: PathPart
    value_template:
      | # Use the integration's route and this resource's position (how many children it has) to determine the path part
      {{ $integration := downstream "aws:api_integration" .Self }}
      {{ $parts := slice (split (fieldValue "Route" $integration) "/") 1 }}
      {{ $paths := shortestPath .Self $integration | filterIds "aws:api_resource" }}
      {{ index $parts (sub (len $parts) (len $paths)) }}
delete_context:
  requires_no_upstream_or_downstream: true
views:
  dataflow: small
