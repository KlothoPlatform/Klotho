resources:
    aws:api_stage:rest_api_1:api_stage-0:
        Deployment: aws:api_deployment:rest_api_1:api_deployment-0
        RestApi: aws:rest_api:rest_api_1
        StageName: stage
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: api_stage-0
    aws:dynamodb_table:dynamodb_table_3:
        Attributes:
            - Name: id
              Type: S
        BillingMode: PAY_PER_REQUEST
        HashKey: id
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: dynamodb_table_3
    aws:api_deployment:rest_api_1:api_deployment-0:
        RestApi: aws:rest_api:rest_api_1
        Triggers:
            rest_api_1_integration_0: rest_api_1_integration_0
            rest_api_1_integration_0_method: rest_api_1_integration_0_method
    aws:rest_api:rest_api_1:
        BinaryMediaTypes:
            - application/octet-stream
            - image/*
        Stages:
            - aws:api_stage:rest_api_1:api_stage-0
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: rest_api_1
    aws:api_resource:rest_api_1:api_resource-0:
        FullPath: /{proxy+}
        PathPart: '{proxy+}'
        RestApi: aws:rest_api:rest_api_1
    aws:api_method:rest_api_1:rest_api_1_integration_0_method:
        Authorization: NONE
        HttpMethod: ANY
        RequestParameters:
            method.request.path.proxy: true
        Resource: aws:api_resource:rest_api_1:api_resource-0
        RestApi: aws:rest_api:rest_api_1
    aws:api_integration:rest_api_1:rest_api_1_integration_0:
        IntegrationHttpMethod: POST
        Method: aws:api_method:rest_api_1:rest_api_1_integration_0_method
        RequestParameters:
            integration.request.path.proxy: method.request.path.proxy
        Resource: aws:api_resource:rest_api_1:api_resource-0
        RestApi: aws:rest_api:rest_api_1
        Route: /{proxy+}
        Target: aws:lambda_function:lambda_function_0
        Type: AWS_PROXY
        Uri: aws:lambda_function:lambda_function_0#LambdaIntegrationUri
    aws:lambda_permission:rest_api_1_integration_0_lambda_function_0:
        Action: lambda:InvokeFunction
        Function: aws:lambda_function:lambda_function_0
        Principal: apigateway.amazonaws.com
        Source: aws:rest_api:rest_api_1#ChildResources
    aws:lambda_function:lambda_function_0:
        ExecutionRole: aws:iam_role:lambda_function_0-ExecutionRole
        Image: aws:ecr_image:lambda_function_0-image
        LogGroup: aws:log_group:lambda_function_0-log-group
        MemorySize: 512
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: lambda_function_0
        Timeout: 180
    aws:SERVICE_API:lambda_function_0_lambda_function_0-log-group:
    aws:ecr_image:lambda_function_0-image:
        Context: .
        Dockerfile: lambda_function_0-image.Dockerfile
        Platform: linux/amd64
        Repo: aws:ecr_repo:ecr_repo-0
    aws:iam_role:lambda_function_0-ExecutionRole:
        AssumeRolePolicyDoc:
            Statement:
                - Action:
                    - sts:AssumeRole
                  Effect: Allow
                  Principal:
                    Service:
                        - lambda.amazonaws.com
            Version: "2012-10-17"
        ManagedPolicies:
            - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: lambda_function_0-ExecutionRole
    aws:ecr_repo:ecr_repo-0:
        ForceDelete: true
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: ecr_repo-0
    aws:log_group:lambda_function_0-log-group:
        LogGroupName: /aws/lambda/lambda_function_0
        RetentionInDays: 5
        Tags:
            GLOBAL_KLOTHO_TAG: test
            RESOURCE_NAME: lambda_function_0-log-group
edges:
    aws:api_stage:rest_api_1:api_stage-0 -> aws:api_deployment:rest_api_1:api_deployment-0:
    aws:api_stage:rest_api_1:api_stage-0 -> aws:rest_api:rest_api_1:
    aws:api_deployment:rest_api_1:api_deployment-0 -> aws:api_integration:rest_api_1:rest_api_1_integration_0:
    aws:api_deployment:rest_api_1:api_deployment-0 -> aws:api_method:rest_api_1:rest_api_1_integration_0_method:
    aws:api_deployment:rest_api_1:api_deployment-0 -> aws:rest_api:rest_api_1:
    aws:rest_api:rest_api_1 -> aws:api_integration:rest_api_1:rest_api_1_integration_0:
    aws:rest_api:rest_api_1 -> aws:api_method:rest_api_1:rest_api_1_integration_0_method:
    aws:rest_api:rest_api_1 -> aws:api_resource:rest_api_1:api_resource-0:
    aws:api_resource:rest_api_1:api_resource-0 -> aws:api_integration:rest_api_1:rest_api_1_integration_0:
    aws:api_resource:rest_api_1:api_resource-0 -> aws:api_method:rest_api_1:rest_api_1_integration_0_method:
    aws:api_method:rest_api_1:rest_api_1_integration_0_method -> aws:api_integration:rest_api_1:rest_api_1_integration_0:
    aws:api_integration:rest_api_1:rest_api_1_integration_0 -> aws:lambda_permission:rest_api_1_integration_0_lambda_function_0:
    aws:lambda_permission:rest_api_1_integration_0_lambda_function_0 -> aws:lambda_function:lambda_function_0:
    aws:lambda_function:lambda_function_0 -> aws:SERVICE_API:lambda_function_0_lambda_function_0-log-group:
    aws:lambda_function:lambda_function_0 -> aws:ecr_image:lambda_function_0-image:
    aws:lambda_function:lambda_function_0 -> aws:iam_role:lambda_function_0-ExecutionRole:
    aws:SERVICE_API:lambda_function_0_lambda_function_0-log-group -> aws:log_group:lambda_function_0-log-group:
    aws:ecr_image:lambda_function_0-image -> aws:ecr_repo:ecr_repo-0:
    aws:iam_role:lambda_function_0-ExecutionRole -> aws:log_group:lambda_function_0-log-group:
outputs: {}
