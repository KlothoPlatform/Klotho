// klotho generated
// This is generated to register listeners to EventEmitters and forward to the runtime implementation (and onward to the remote resource).
const addInflight = require('{{.RuntimeImport}}/dispatcher').addInflight
const emitterRuntime = require('{{.RuntimeImport}}/emitter');

{{- $ctx := . }}
{{- $thisModule := (printf "./%s" (fileTrimExt (fileBase $.Path))) }}
{{range $idx, $emitter := .Entries}}
{{- if (eq $emitter.ImportPath $thisModule) }}
const emitter{{$idx}} = new emitterRuntime.Emitter('{{$ctx.Path}}', '{{$emitter.VarName}}')
exports.{{$emitter.VarName}} = emitter{{$idx}}
{{- else}}
const emitter{{$idx}} = require('{{$emitter.ImportPath}}').{{$emitter.VarName}}
{{- end}}

{{range $emitter.Events}}
emitter{{$idx}}.on('{{.}}', function() {
  addInflight(emitter{{$idx}}.send.apply(emitter{{$idx}}, ['{{.}}', ...arguments]))
})
{{- end}}
{{- end}}
